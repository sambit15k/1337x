name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: Test matrix
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    strategy:
      matrix:
        python-version: [3.10, 3.11]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install dev tools (ruff, mypy)
        run: |
          python -m pip install ruff mypy

      - name: Run pytest
        run: |
          python -m pytest --junitxml=results-${{ matrix.python-version }}.xml -q

      - name: Upload test report artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}
          path: results-${{ matrix.python-version }}.xml

      - name: Run ruff (linter)
        run: |
          python -m ruff check .

      - name: Run mypy (type checks)
        run: |
          python -m mypy --ignore-missing-imports .

  deploy:
    name: Deploy release (draft on main)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create draft GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: release-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            Automated draft release produced by CI for commit ${{ github.sha }}.
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip downloaded artifacts
        run: |
          if [ -d artifacts ]; then
            cd artifacts || exit 0
            zip -r ../artifacts-${{ github.sha }}.zip . || true
            cd -
          else
            echo "No artifacts to zip"
          fi

      - name: Upload release asset (test artifacts)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts-${{ github.sha }}.zip
          asset_name: test-artifacts-${{ github.sha }}.zip
          asset_content_type: application/zip

